//@version=5
indicator("ROMAN INDICATOR", shorttitle = 'RV', overlay = true)

// === User Inputs
yPos        = input.string("Bottom", "Watermark Vertical Location", options = ["Top", "Middle", "Bottom"], inline = '1')
xPos        = input.string("Right", "Watermark Horizontal Location", options = ["Left", "Center", "Right"], inline = '1')
offsetY     = input.int(40, "Vertical Offset", minval=0, maxval=100)
txtCol      = input.color(color.rgb(255,255,255), 'Text Color', inline = '2')
txtSize     = input.string('Normal', 'Text Size', options = ['Huge', 'Large', 'Normal', 'Small'], inline = '2')
symTime     = input.bool(true, 'Symbol & Time Frame')
compName    = input.bool(true, 'Company Name')
indSec      = input.bool(true, 'Industry & Sector')
mCap        = input.bool(true, 'Show Market Cap')
showATR     = input.bool(false, "Show ATR (14-Day) & %")
showMA150   = input.bool(true, "Show Moving Average Position")
maPeriod    = input.int(150, "Moving Average Period", minval=1, maxval=500)
showRemainingDaysInput = input.bool(true, "Show Days Until Earnings")
showEarningsRow = input.bool(true, "Show Earnings Info")
atrRedThreshold = input.float(6.0, "Red Threshold (%)", minval=0)
atrYellowThreshold = input.float(3.0, "Yellow Threshold (%)", minval=0)
showStopLoss = input.bool(true, "Show Stop Loss (Close - ATR)")
stopSourceOption = input.string("Today", "Stop Loss Price Source", options = ["Today", "Yesterday", "2 Days Ago", "Auto"])
atrMultiplier = input.float(1.0, "ATR Multiplier", minval=0.1, step=0.1)
volumeLookback = input.string("1 Day", "Volume Change Period", options=["1 Day", "3 Days", "1 Week", "1 Month"])
maWeight     = input.float(0.6, "Trend calculation weight: MA", minval=0, maxval=1, step=0.1)
rsiWeight    = input.float(0.3, "Trend calculation weight: RSI", minval=0, maxval=1, step=0.1)
volWeight    = input.float(0.1, "Trend calculation weight: Volume", minval=0, maxval=1, step=0.1)
showFibonacci = input.bool(true, "Show Fibonacci Zones")
showfibonacciAdditinalLines = input.bool(true, "Show Fibonacci Lines")
fibLength = input.int(50, "Fibonacci Swing Length", minval=1)
showPivotLabels = input.bool(true, "Show Pivot High/Low Labels")
pivotStrength   = input.int(20, "Pivot Lookback Strength", minval=1)
showTPFib     = input.bool(true, "Show Take-Profit Levels")

// === Font Size Mapping
sizer = switch txtSize
    'Huge' => size.huge
    'Large' => size.large
    'Normal' => size.normal
    'Small' => size.small

// === Market Cap Calculation
rounder(float val) =>
    if val >= 1e12
        math.round(math.abs(val / 1e12), 2)
    else if val >= 1e9
        math.round(math.abs(val / 1e9), 2)
    else
        math.round(math.abs(val / 1e6), 2)

// === Data
sector  = syminfo.sector
ind     = syminfo.industry
tick    = syminfo.ticker
tf      = timeframe.period
name    = syminfo.description
tso     = syminfo.shares_outstanding_total
marketcap = tso * close 
marCap    = marketcap > 1e12 ? 'T' : marketcap > 1e9 ? 'B' : 'M'

tf := tf == 'D' ? '1D' : tf == 'W' ? '1W' : tf == '60' ? '1H' :
      tf == '120' ? '2H' : tf == '180' ? '3H' : tf == '240' ? '4H' : tf

// === ATR
atrValue = ta.atr(14)
atrPercent = (atrValue / close) * 100
atrEmoji = atrPercent >= atrRedThreshold ? "üî¥" : atrPercent >= atrYellowThreshold ? "üü°" : "üü¢"

// === Stop Loss
manualBase = stopSourceOption == "Yesterday" ? close[1] : stopSourceOption == "2 Days Ago" ? close[2] : close
manualSL = manualBase - (atrValue * atrMultiplier)
autoSL = math.min(close - atrValue, close[1] - atrValue[1], close[2] - atrValue[2])
stopLoss = stopSourceOption == "Auto" ? autoSL : manualSL
distancePercent = ((close - stopLoss) / close) * 100
slEmoji = distancePercent > 5 ? "üü¢" : distancePercent > 2 ? "üü°" : "üî¥"

// === MA
customMA = ta.sma(close, maPeriod)
maStatus = close > customMA ? "Above " + str.tostring(maPeriod) + " MA üü¢" : "Below " + str.tostring(maPeriod) + " MA üî¥"
plot(showMA150 ? customMA : na, title="MA 150", color=color.new(color.red, 0), linewidth=2, style=plot.style_line)

// === Earnings
earningsTime = earnings.future_time
earningsDateStr = ""
if not na(earningsTime) and showRemainingDaysInput
    todayUTC = timestamp(year(timenow), month(timenow), dayofmonth(timenow), 0, 0)
    earningsUTC = timestamp(year(earningsTime), month(earningsTime), dayofmonth(earningsTime), 0, 0)
    timediff = math.max(int(math.round((earningsUTC - todayUTC) / 86400000)), 0)
    earningsDateStr := str.tostring(timediff) + " days remaining"

// === RSI
rsiValue = ta.rsi(close, 14)
rsiEmoji = rsiValue > 70 ? "üî¥" : rsiValue < 30 ? "üî¥" : "üü¢"
rsiTrend = rsiValue > rsiValue[1] ? "‚¨ÜÔ∏è" : rsiValue < rsiValue[1] ? "‚¨áÔ∏è" : "‚è∏Ô∏è"

// === Volume Change %
volLookbackBars = volumeLookback == "3 Days" ? 3 : volumeLookback == "1 Week" ? 5 : volumeLookback == "1 Month" ? 21 : 1
volChange = volume[volLookbackBars] == 0 ? na : ((volume - volume[volLookbackBars]) / volume[volLookbackBars]) * 100
volEmoji = volChange > 0 ? "‚¨ÜÔ∏è" : volChange < 0 ? "‚¨áÔ∏è" : "‚è∏Ô∏è"

// === Trend Summary Row
maTrendScore = close > customMA ? maWeight : 0
rsiTrendScore = rsiValue > rsiValue[1] ? rsiWeight : 0
volTrendScore = volume > volume[1] ? volWeight : 0

totalScore = maTrendScore + rsiTrendScore + volTrendScore
trendSummary = "üìà Trend: " + (totalScore >= 0.6 ? "Uptrend üü¢" : "Downtrend üî¥")

// === Improved Fibonacci Calculation ===

// Pivot detection
pivotHigh = ta.pivothigh(high, pivotStrength, pivotStrength)
pivotLow  = ta.pivotlow(low, pivotStrength, pivotStrength)

// Track the most recent swing points
var float lastSwingHigh = na
var float lastSwingLow = na
var int lastSwingHighBar = na
var int lastSwingLowBar = na
var string swingDirection = na

// Update swing points when new pivots are found
if not na(pivotHigh)
    lastSwingHigh := pivotHigh
    lastSwingHighBar := bar_index - pivotStrength

if not na(pivotLow)
    lastSwingLow := pivotLow
    lastSwingLowBar := bar_index - pivotStrength

// Determine swing direction based on most recent pivot
if not na(lastSwingHigh) and not na(lastSwingLow)
    if lastSwingHighBar > lastSwingLowBar
        swingDirection := "down"  // High came after low = downtrend
    else
        swingDirection := "up"    // Low came after high = uptrend

// Calculate Fibonacci levels
var float fib0 = na
var float fib236 = na
var float fib382 = na
var float fib500 = na
var float fib618 = na
var float fib786 = na
var float fib1000 = na
var float fib1272 = na
var float fib1618 = na

if not na(lastSwingHigh) and not na(lastSwingLow)
    fibRange = lastSwingHigh - lastSwingLow
    
    if swingDirection == "down"
        // Retracement from high to low (for potential bounce)
        fib0 := lastSwingHigh
        fib236 := lastSwingHigh - fibRange * 0.236
        fib382 := lastSwingHigh - fibRange * 0.382
        fib500 := lastSwingHigh - fibRange * 0.5
        fib618 := lastSwingHigh - fibRange * 0.618
        fib786 := lastSwingHigh - fibRange * 0.786
        fib1000 := lastSwingLow
        // Extensions below the low
        fib1272 := lastSwingLow - fibRange * 0.272
        fib1618 := lastSwingLow - fibRange * 0.618
        
    else if swingDirection == "up"
        // Retracement from low to high (for potential pullback)
        fib0 := lastSwingLow
        fib236 := lastSwingLow + fibRange * 0.236
        fib382 := lastSwingLow + fibRange * 0.382
        fib500 := lastSwingLow + fibRange * 0.5
        fib618 := lastSwingLow + fibRange * 0.618
        fib786 := lastSwingLow + fibRange * 0.786
        fib1000 := lastSwingHigh
        // Extensions above the high
        fib1272 := lastSwingHigh + fibRange * 0.272
        fib1618 := lastSwingHigh + fibRange * 0.618

// Plot Fibonacci levels
showFibLines = showFibonacci and showfibonacciAdditinalLines

// Plot Fibonacci levels
plot(showFibLines ? fib236 : na, color=color.new(color.gray, 50), linewidth=1, title="Fib 23.6%")
plot(showFibLines ? fib382 : na, color=color.new(color.blue, 50), linewidth=1, title="Fib 38.2%")
plot(showFibLines ? fib500 : na, color=color.new(color.yellow, 50), linewidth=2, title="Fib 50%")
plot(showFibLines ? fib618 : na, color=color.new(color.orange, 50), linewidth=2, title="Fib 61.8%")
plot(showFibLines ? fib786 : na, color=color.new(color.red, 50), linewidth=1, title="Fib 78.6%")    

// Add labels with both percentage and price
if showFibonacci and barstate.islast and showfibonacciAdditinalLines
    label.new(bar_index, fib236, text="23.6% (" + str.tostring(fib236, "#.##") + ")", style=label.style_label_left, color=color.new(color.gray, 80), textcolor=color.white, size=size.small)
    label.new(bar_index, fib382, text="38.2% (" + str.tostring(fib382, "#.##") + ")", style=label.style_label_left, color=color.new(color.blue, 80), textcolor=color.white, size=size.small)
    // label.new(bar_index, fib500, text="50.0% (" + str.tostring(fib500, "#.##") + ")", style=label.style_label_left, color=color.new(color.yellow, 80), textcolor=color.white, size=size.small)
    // label.new(bar_index, fib618, text="61.8% (" + str.tostring(fib618, "#.##") + ")", style=label.style_label_left, color=color.new(color.orange, 80), textcolor=color.white, size=size.small)
    // label.new(bar_index, fib786, text="78.6% (" + str.tostring(fib786, "#.##") + ")", style=label.style_label_left, color=color.new(color.red, 80), textcolor=color.white, size=size.small)


// === Pivot Labels
ph = ta.pivothigh(high, pivotStrength, pivotStrength)
pl = ta.pivotlow(low, pivotStrength, pivotStrength)

// Show labels on chart
if showPivotLabels
    if not na(ph)
        label.new(x=bar_index - pivotStrength, y=ph, text=str.tostring(ph, "#.##"), style=label.style_label_down, yloc=yloc.abovebar, color=color.new(color.white, 100), textcolor=color.white, size=size.small)
    if not na(pl)
        label.new(x=bar_index - pivotStrength, y=pl, text=str.tostring(pl, "#.##"), style=label.style_label_up, yloc=yloc.belowbar, color=color.new(color.white, 100), textcolor=color.white, size=size.small)

// === Stop Loss Label
var label slLabel = na
if showStopLoss and barstate.islast
    if not na(slLabel)
        label.delete(slLabel)
    slLabel := label.new(x=bar_index + 1, y=stopLoss, text=(close <= stopLoss ? "SELL" : str.tostring(stopLoss, "#.##")), style=label.style_label_left, color=color.new(color.red, 60), textcolor=color.white, size=size.small)

// === Enhanced Buy/Sell Zone boxes
var box retraceBox1 = na
var box retraceBox2 = na

if showFibonacci and barstate.islast and not na(fib500) and not na(fib786)
    // Clear previous boxes
    if not na(retraceBox1)
        box.delete(retraceBox1)
    if not na(retraceBox2)
        box.delete(retraceBox2)

    leftBar = math.min(lastSwingHighBar, lastSwingLowBar)
    rightBar = bar_index + 10
    
    if swingDirection == "down"
        // Golden pocket (50% - 61.8%) and Deep zone (61.8% - 78.6%)
        retraceBox1 := box.new(leftBar, fib500, rightBar, fib618, 
                              bgcolor=color.new(color.green, 85), 
                              border_color=color.green, border_width=1)
        retraceBox2 := box.new(leftBar, fib618, rightBar, fib786, 
                              bgcolor=color.new(color.red, 85), 
                              border_color=color.red, border_width=1)
        
        // Labels
        label.new(rightBar, fib500, "50% (" + str.tostring(fib500, "#.##") + ")", style=label.style_label_left, size=size.small, color=color.new(color.yellow, 70), textcolor=color.white)
        label.new(rightBar, fib618, "61.8% BUY (" + str.tostring(fib618, "#.##") + ")", style=label.style_label_left, size=size.small, color=color.new(color.green, 70), textcolor=color.white)
        label.new(rightBar, fib786, "78.6% DEEP (" + str.tostring(fib786, "#.##") + ")", style=label.style_label_left, size=size.small, color=color.new(color.red, 70), textcolor=color.white)
        
        if showTPFib
            label.new(rightBar, fib1272, "TP 1.272", style=label.style_label_left, size=size.small, color=color.new(color.blue, 70), textcolor=color.white)
            label.new(rightBar, fib1618, "TP 1.618", style=label.style_label_left, size=size.small, color=color.new(color.purple, 70), textcolor=color.white)
        
    else if swingDirection == "up"
        // Resistance zones for uptrend retracements
        retraceBox1 := box.new(leftBar, fib618, rightBar, fib500, 
                              bgcolor=color.new(color.orange, 85), 
                              border_color=color.orange, border_width=1)
        retraceBox2 := box.new(leftBar, fib786, rightBar, fib618, 
                              bgcolor=color.new(color.red, 85), 
                              border_color=color.red, border_width=1)
        
        // Labels
        label.new(rightBar, fib500, "50%", style=label.style_label_left, size=size.small, color=color.new(color.yellow, 70), textcolor=color.white)
        label.new(rightBar, fib618, "61.8% SELL", style=label.style_label_left, size=size.small, color=color.new(color.orange, 70), textcolor=color.white)
        label.new(rightBar, fib786, "78.6% SHORT", style=label.style_label_left, size=size.small, color=color.new(color.red, 70), textcolor=color.white)
        
        if showTPFib
            label.new(rightBar, fib1272, "TP 1.272", style=label.style_label_left, size=size.small, color=color.new(color.blue, 70), textcolor=color.white)
            label.new(rightBar, fib1618, "TP 1.618", style=label.style_label_left, size=size.small, color=color.new(color.purple, 70), textcolor=color.white)

// === Alert Conditions
alertcondition(showStopLoss and close <= stopLoss, title="Price Crossed Stop Loss", message="‚ö†Ô∏è Price has crossed below Stop Loss!")

// Corrected Fibonacci alerts
alertcondition(showFibonacci and swingDirection == "down" and close <= fib500 and close >= fib618, title="Buy Zone Entered", message="üìâ Entered BUY ZONE (Fib 0.5‚Äì0.618)")
alertcondition(showFibonacci and swingDirection == "down" and close <= fib618 and close >= fib786, title="Deep Buy Zone", message="üìâ Entered DEEP BUY ZONE (Fib 0.618‚Äì0.786)")
alertcondition(showFibonacci and swingDirection == "up" and close >= fib618 and close <= fib500, title="Sell Zone Entered", message="üìà Entered SELL ZONE (Fib 0.618‚Äì0.5)")
alertcondition(showFibonacci and swingDirection == "up" and close >= fib786 and close <= fib618, title="Short Zone", message="üìà Entered SHORT ZONE (Fib 0.786‚Äì0.618)")

// === Table Display
posTable = str.lower(yPos) + '_' + str.lower(xPos)
var table sec = table.new(posTable, 1, 12, color.new(color.white,100), color.new(color.white,100), 1, color.new(color.white,100), 1)

if barstate.islast
    rowIndex = 0
    table.cell(sec, 0, rowIndex, "")
    rowIndex += 1

    if compName
        table.cell(sec, 0, rowIndex, mCap ? name + ' (' + str.tostring(nz(rounder(marketcap))) + marCap + ')' : name, text_color = txtCol, text_size = sizer, text_halign=text.align_left)
        rowIndex += 1

    if symTime
        table.cell(sec, 0, rowIndex, tick + ', ' + tf, text_color = txtCol, text_size = sizer, text_halign=text.align_left)
        rowIndex += 1

    if indSec
        table.cell(sec, 0, rowIndex, not na(sector) ? sector + ', ' + ind : '', text_color = txtCol, text_size = sizer, text_halign=text.align_left)
        rowIndex += 1

    if showATR
        table.cell(sec, 0, rowIndex, "ATR (14): " + str.tostring(atrValue, "#.##") + " (" + str.tostring(atrPercent, "#.##") + "%) " + atrEmoji, text_color = txtCol, text_size = sizer, text_halign=text.align_left)
        rowIndex += 1

    if showMA150
        table.cell(sec, 0, rowIndex, maStatus, text_color = txtCol, text_size = sizer, text_halign=text.align_left)
        rowIndex += 1

    if showStopLoss
        table.cell(sec, 0, rowIndex, "Stop Loss: " + str.tostring(stopLoss, "#.##") + " " + slEmoji, text_color = txtCol, text_size = sizer, text_halign=text.align_left)
        rowIndex += 1

    if showEarningsRow and earningsDateStr != ""
        table.cell(sec, 0, rowIndex, "Earnings: " + earningsDateStr, text_color = txtCol, text_size = sizer, text_halign=text.align_left)
        rowIndex += 1

    table.cell(sec, 0, rowIndex, "RSI (14): " + str.tostring(rsiValue, "#.##") + " " + rsiEmoji + " " + rsiTrend, text_color = txtCol, text_size = sizer, text_halign=text.align_left)
    rowIndex += 1

    table.cell(sec, 0, rowIndex, "Volume Œî: " + str.tostring(volChange, "#.##") + "% " + volEmoji, text_color = txtCol, text_size = sizer, text_halign=text.align_left)
    rowIndex += 1

    table.cell(sec, 0, rowIndex, trendSummary, text_color = txtCol, text_size = sizer, text_halign=text.align_left)
    rowIndex += 1
